/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
// #include <dt-bindings/zmk/mouse.h>

#define AS(keycode) &as LS(keycode) keycode     // Autoshift Macro
#define HM(k1, k2) &hm k1 k2     // Homerow Mods Macro

#define BASE 0
#define FUNCTIONS   1
#define SYMBOLS   2

/ {
   // macros {
   //      delete_word: delete_word {
   //          label = "Delete_Word";
   //          compatible = "zmk,behavior-macro";
   //          #binding-cells = <0>;
   //          bindings
   //              = <&macro_press &kp LCTRL>
   //              , <&macro_tap &kp BACKSPACE>
   //              , <&macro_release &kp LCTRL>
   //              ;
   //      };
   // };
   behaviors {
      td0: tap_dance_0 {
         compatible = "zmk,behavior-tap-dance";
         label = "TAP_DANCE_0";
         #binding-cells = <0>;
         tapping-term-ms = <200>;
         // bindings = <&mt LSHFT SPACE>, <&mo 1>, <&mo 2>;
         bindings = <&kp LSHFT>, <&mo 1>, <&mo 2>;
      };
      td1: tap_dance_1 {
         compatible = "zmk,behavior-tap-dance";
         label = "TAP_DANCE_1";
         #binding-cells = <0>;
         tapping-term-ms = <200>;
         // bindings = <&mt LSHFT SPACE>, <&mo 1>, <&mo 2>;
         bindings = <&kp RSHFT>, <&mo 2>, <&mo 1>;
      };
      as: auto_shift {
         compatible = "zmk,behavior-hold-tap";
         label = "AUTO_SHIFT";
         #binding-cells = <2>;
         tapping_term_ms = <135>;
         quick_tap_ms = <0>;
         flavor = "tap-preferred";
         bindings = <&kp>, <&kp>;
      };
      bspc_del: backspace_delete {
         compatible = "zmk,behavior-mod-morph";
         label = "BACKSPACE_DELETE";
         #binding-cells = <0>;
         bindings = <&kp BACKSPACE>, <&kp DELETE>;
         mods = <(MOD_LSFT|MOD_RSFT)>; // Shift
      };
      hm: homerow_mods {
         compatible = "zmk,behavior-hold-tap";
         label = "HOMEROW_MODS";
         #binding-cells = <2>;
         tapping-term-ms = <150>;
         quick-tap-ms = <0>;
         flavor = "tap-preferred";
         bindings = <&kp>, <&kp>;
      };
   };
   keymap {
      compatible = "zmk,keymap";
      default_layer {
         label = "Base";
         bindings = <
// -----------------------------------------------------------------------------------------
// |  --  |  Q  |  W  |  F  |  P  |  G  |   |  J  |  L   |  U      |  Y    |  ;     |  --  |
// |  --  |  A  |  R  |  S  |  T  |  D  |   |  H  |  N   |  E      |  I    |  O     |  --  |
// |  --  |  Z  |  X  |  C  |  V  |  B  |   |  K  |  M   |  ,      |  .    |  /     |  --  |
//                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |
   &none  AS(Q) AS(W) AS(F) AS(P) AS(G)     AS(J) AS(L)  AS(U) AS(Y) AS(SEMI) &none
   &none  AS(A) HM(LCTRL, R) HM(LALT, S) HM(LGUI, T) AS(D)  AS(H) HM(RGUI, N) HM(RALT, E) HM(RCTRL, I) AS(O) &none
   &none  AS(Z) AS(X) AS(C) AS(V) AS(B)     AS(K) AS(M)  AS(COMMA) AS(DOT) AS(FSLH) &none
                      &kp TAB &kp BACKSPACE &td0   &td1 &kp SPACE &kp RETURN
                        >;
                };
      lower_layer {
         label = "Symbols";
         bindings = <
// -----------------------------------------------------------------------------------------
// |  --  |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |  --  |
// |  --  | BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |  --  |
// |  --  |     |     |     |     |     |   |     |     |     |     |     |  --  |
//                    | GUI |     | SPC |   | ENT |     | ALT |
   &none  &kp N1    &kp N2   &kp N3    &kp N4    &kp N5    &kp N6   &kp N7    &kp N8   &kp N9    &kp N0     &none
   &none  &kp LT    &kp LBKT &kp LBRC  &kp LPAR  &kp DQT   &kp SQT  &kp RPAR  &kp RBRC &kp RBKT  &kp GT     &none
   &none  &kp GRAVE &kp PIPE &kp UNDER &kp MINUS &kp FSLH  &kp BSLH &kp TILDE &kp PLUS &kp EQUAL &kp QMARK  &none
                          	  &trans    &trans    &trans    &trans   &trans    &trans
                        >;
      };

      raise_layer {
         label = "Function";
         bindings = <
// -----------------------------------------------------------------------------------------
// |  --  |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  |  --  |
// |  --  |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  --  |
// |  --  |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  --  |
//                    | GUI |     | SPC |   | ENT |     | ALT |
   &none  &kp F1 &kp F2            &kp F3          &kp F4     &kp F5  &kp F6          &kp F7   &kp F8   &kp F9   &kp F10   &none
   &none  &none  &kp K_VOLUME_DOWN &kp K_VOLUME_UP &kp K_MUTE &kp F11 &kp F12         &kp LEFT &kp DOWN &kp UP   &kp RIGHT &none
   &none  &none  &kp C_BRI_DN      &kp C_BRI_UP    &none      &none   &kp PRINTSCREEN &none    &none    &none    &none     &none
                    	              &trans          &trans     &trans  &trans          &trans   &trans
         >;
      };
   };
};
