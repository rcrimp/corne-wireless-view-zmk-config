#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
// #include <dt-bindings/zmk/mouse.h>

// #define AS(keycode) &as LS(keycode) keycode     // Autoshift Macro
#define AS(keycode) &as keycode keycode     // Autoshift Macro
#define HM(k1, k2) &hm k1 k2     // Homerow Mods Macro

// #include "macros.dtsi"
#define XXX &none
#define ___ &trans

#define HOME_L 0
#define SYM_L 1
#define NUM_L 2
#define HARDWARE_L 3

#define NAV_LEFT  &mt HOME   LEFT    // tap: left  | long-tap: beginning of line
#define NAV_RIGHT &mt END    RIGHT   // tap: right | long-tap: end       of line
#define NAV_UP    &mt LC(HOME) UP      // tap: up    | long-tap: beginning of document
#define NAV_DOWN  &mt LC(END)  DOWN    // tap: down  | long-tap: end       of document
#define NAV_BSPC  &mt LC(BSPC) BSPC    // tap: bspc  | long-tap: delete word backward

mm_comma: comma_morph {
   compatible = "zmk,behavior-mod-morph";
   label = "COMMA_MORPH";
   #binding-cells = <0>;
   bindings = <&kp COMMA>, <&kp SEMICOLON>;
   mods = <(MOD_LSFT|MOD_RSFT)>;
};
mm_dot: dot_morph {
   compatible = "zmk,behavior-mod-morph";
   label = "DOT_MORPH";
   #binding-cells = <0>;
   bindings = <&kp DOT>, <&kp COLON>;
   mods = <(MOD_LSFT|MOD_RSFT)>;
};
mm_bang: bang_morph {
   compatible = "zmk,behavior-mod-morph";
   label = "BANG_MORPH";
   #binding-cells = <0>;
   bindings = <&kp QMARK>, <&kp EXCL>;
   mods = <(MOD_LSFT|MOD_RSFT)>;
};
mm_bs: bs_morph {
   compatible = "zmk,behavior-mod-morph";
   label = "BS_MORPH";
   #binding-cells = <0>;
   bindings = <&kp BACKSPACE>, <&kp DELETE>;
   mods = <(MOD_LSFT|MOD_RSFT)>;
   keep-mods = <MOD_RSFT>;
};

/ {
   conditional_layers {
      compatible = "zmk,conditional-layers";
      tri_layer {
         if-layers = <1 2>;
         then-layer = <3>;
      };
   };
   // macros {
   //      delete_word: delete_word {
   //          label = "Delete_Word";
   //          compatible = "zmk,behavior-macro";
   //          #binding-cells = <0>;
   //          bindings
   //              = <&macro_press &kp LCTRL>
   //              , <&macro_tap &kp BACKSPACE>
   //              , <&macro_release &kp LCTRL>
   //              ;
   //      };
   // };
   behaviors {
      td0: tap_dance_0 {
         compatible = "zmk,behavior-tap-dance";
         label = "TAP_DANCE_0";
         #binding-cells = <0>;
         tapping-term-ms = <200>;
         bindings = <&lt 1 DELETE>, <&tog 1>, <&to 0>;
      };
      td1: tap_dance_1 {
         compatible = "zmk,behavior-tap-dance";
         label = "TAP_DANCE_1";
         #binding-cells = <0>;
         tapping-term-ms = <200>;
         bindings = <&lt 2 RETURN>, <&tog 2>, <&to 0>;
      };
      // tdbs: tap_dance_bs {
      //    compatible = "zmk,behavior-tap-dance";
      //    label = "TAP_DANCE_BS";
      //    #binding-cells = <0>;
      //    tapping-term-ms = <200>;
      //    bindings = <&kp BACKSPACE>, <&delete_word>;
      // };
      tdqt: tap_dance_qt {
         compatible = "zmk,behavior-tap-dance";
         label = "TAP_DANCE_QT";
         #binding-cells = <0>;
         tapping-term-ms = <200>;
         bindings = <&kp SQT>, <&kp DQT>, <&kp GRAVE>;
      };
      as: auto_shift {
         compatible = "zmk,behavior-hold-tap";
         label = "AUTO_SHIFT";
         #binding-cells = <2>;
         tapping_term_ms = <135>;
         quick_tap_ms = <0>;
         flavor = "tap-preferred";
         bindings = <&kp>, <&kp>;
      };
      bspc_del: backspace_delete {
         compatible = "zmk,behavior-mod-morph";
         label = "BACKSPACE_DELETE";
         #binding-cells = <0>;
         bindings = <&kp BACKSPACE>, <&kp DELETE>;
         mods = <(MOD_LSFT|MOD_RSFT)>; // Shift
      };
      hm: homerow_mods {
         compatible = "zmk,behavior-hold-tap";
         label = "HOMEROW_MODS";
         #binding-cells = <2>;
         tapping-term-ms = <150>;
         quick-tap-ms = <0>;
         flavor = "tap-preferred";
         bindings = <&kp>, <&kp>;
      };
   };
   keymap {
      compatible = "zmk,keymap";
      home_layer {
         label = "Home";
         bindings = <
//╭───╮╭───────────┬───────────┬────────────┬────────────┬─────╮ ╭─────┬────────────┬────────────┬───────────┬───────────╮╭───╮
   XXX  AS(Q)       AS(W)       AS(F)        AS(P)        AS(G)   AS(J) AS(L)        AS(U)        AS(Y)       &kp ESCAPE   XXX
//├───┤├───────────┼───────────┼────────────┼────────────┼─────┤ ├─────┼────────────┼────────────┼───────────┼───────────┤├───┤
   XXX  HM(LGUI, A) HM(LALT, R) HM(LCTRL, S) HM(LSHFT, T) AS(D)   AS(H) HM(RSHFT, N) HM(RCTRL, E) HM(RALT, I) HM(RGUI, O)  XXX
//├───┤├───────────┼───────────┼────────────┼────────────┼─────┤ ├─────┼────────────┼────────────┼───────────┼───────────┤├───┤
   XXX  AS(Z)       AS(X)       AS(C)        AS(V)        AS(B)   AS(K) AS(M)        &kp COMMA    &kp DOT     &kp FSLH     XXX
//╰───╯╰───────────┴───────────┼────────────┼────────────┼─────┤ ├─────┼────────────┼────────────┴───────────┴───────────╯╰───╯
                                &kp TAB      NAV_BSPC     &td0    &td1  &kp SPACE    &kp TAB 
//                             ╰────────────┴────────────┴─────╯ ╰─────┴────────────┴────────────╯
>;
                };
      sym_layer {
         label = "Symbols";
         bindings = <
//╭───╮╭────────┬────────┬─────────┬─────────┬─────────╮ ╭─────────┬─────────────┬────────┬────────┬──────╮╭───╮
   XXX  &kp EXCL &kp AT   &kp HASH  &kp DLLR  &kp PRCNT   &kp CARET &kp AMPERSAND &kp STAR XXX      ___     XXX
//├───┤├────────┼────────┼─────────┼─────────┼─────────┤ ├─────────┼─────────────┼────────┼────────┼──────┤├───┤
   XXX  &kp LGUI &kp LALT &kp LCTRL &kp LSHFT &kp PLUS    &tdqt     &kp LPAR      &kp LBRC &kp LBKT &kp GT  XXX
//├───┤├────────┼────────┼─────────┼─────────┼─────────┤ ├─────────┼─────────────┼────────┼────────┼──────┤├───┤
   XXX  XXX      XXX      &kp EQUAL &kp TILDE &kp MINUS   &kp UNDER &kp PIPE      ___      ___      ___     XXX
//╰───╯╰────────┴────────┼─────────┼─────────┼─────────┤ ├─────────┼─────────────┼────────┴────────┴──────╯╰───╯
                          ___       ___       ___         ___       ___           ___
//                       ╰─────────┴─────────┴─────────╯ ╰─────────┴─────────────┴────────╯
>;
      };

      num_layer {
         label = "Fn <v^>";
         bindings = <
//╭───╮╭────────┬────────┬─────────┬──────────┬───────╮ ╭───────┬────────┬────────┬──────┬─────────╮╭───╮
   XXX  &kp N1   &kp N2   &kp N3    &kp N4     &kp N5    &kp N6  &kp N7   &kp N8   &kp N9 &kp N0     XXX
//├───┤├────────┼────────┼─────────┼──────────┼───────┤ ├───────┼────────┼────────┼──────┼─────────┤├───┤
   XXX  &kp LGUI &kp LALT &kp LCTRL &kp LSHIFT &kp F11   &kp F12 NAV_LEFT NAV_DOWN NAV_UP NAV_RIGHT  XXX
//├───┤├────────┼────────┼─────────┼──────────┼───────┤ ├───────┼────────┼────────┼──────┼─────────┤├───┤
   XXX  &kp F1   &kp F2   &kp F3    &kp F4     &kp F5    &kp F6  &kp F7   &kp F8   &kp F9 &kp F10    XXX
//╰───╯╰────────┴────────┼─────────┼──────────┼───────┤ ├───────┼────────┼────────┴──────┴─────────╯╰───╯
                    	     ___       ___        ___       ___     ___      ___
//                       ╰─────────┴──────────┴───────╯ ╰───────┴────────┴────────╯
>;
      };
      hw_layer {
         label = "System";
         bindings = <
//╭───╮╭──────────┬──────────┬────────┬────────────┬────────────╮ ╭────────────┬────────────┬────────────┬────────────┬────────────╮╭───╮
   XXX  XXX        XXX        XXX      &kp K_VOL_UP &kp C_BRI_UP   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4  XXX
//├───┤├──────────┼──────────┼────────┼────────────┼────────────┤ ├────────────┼────────────┼────────────┼────────────┼────────────┤├───┤
   XXX  &kp C_PREV &kp C_STOP &kp C_PP &kp K_MUTE   &kp C_NEXT     &bt BT_CLR   &bt BT_PRV   &bt BT_NXT   &bt BT_PRV   &bt BT_NXT    XXX
//├───┤├──────────┼──────────┼────────┼────────────┼────────────┤ ├────────────┼────────────┼────────────┼────────────┼────────────┤├───┤
   XXX  XXX        XXX        XXX      &kp K_VOL_DN &kp C_BRI_DN   XXX          XXX          XXX          XXX          XXX           XXX
//╰───╯╰──────────┴──────────┼────────┼────────────┼────────────┤ ├────────────┼────────────┼────────────┴────────────┴────────────╯╰───╯
                    	         ___      ___          ___            ___          ___          ___
//                           ╰────────┴────────────┴────────────╯ ╰────────────┴────────────┴────────────╯
>;
      };
   };
};
